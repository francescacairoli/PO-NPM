//#define t0 0

// populate based on sampled state
//#define v0 5
//#define x0 0

//#define v0 -1.9999
//#define x0 105.3912

// variables and bounds
[-20, 40] v;
[-500, 500] x;
[0, 2.5] t;
// reachability time bound
[0, Tf] time;

{ mode 1;

  invt:
        (v >= 15); (v <= 40); (t >= 0); (t <= 2.5);
  flow:
        d/dt[v] = -t -2.5;
        d/dt[x] = 0;
        d/dt[t] = 1;

  jump:
    	(and (t = 2.5) (v >= 15) (v <= 40)) ==> @2 (and (v' = v) (x' = x) (t' = t));
    	(and (t >= 0) (t <= 2.5) (v >= 15) (v <= 16)) ==> @4 (and (v' = v) (x' = x) (t' = 0));
}

{ mode 2;

  invt:
        (v >= 15); (v <= 40); (t = 2.5);
  flow:
        d/dt[v] = -5;
        d/dt[x] = 0;
        d/dt[t] = 0;

  jump:
    	(and (t = 2.5) (v >= 15) (v <= 16)) ==> @4 (and (v' = v) (x' = x) (t' = 0));
}

{ mode 3;

  invt:
        (v >= 5); (v <= 20); (t = 1.3);
  flow:
        d/dt[v] = -2.5;
        d/dt[x] = 0;
        d/dt[t] = 0;

  jump:
    	(and (t = 1.3) (v >= 18) (v <= 20)) ==> @1 (and (v' = v) (x' = x) (t' = 0));
    	(and (t = 1.3) (v >= 5) (v <= 11)) ==> @5 (and (v' = v) (x' = 0) (t' = t));	
}

{ mode 4;

  invt:
        (v >= 5); (v <= 20); (t >= 0); (t <= 1.3);
  flow:
        d/dt[v] = -t -1.2;
        d/dt[x] = 0;
        d/dt[t] = 0.5;

  jump:
    	(and (t >= 0) (t <= 1.3) (v >= 18) (v <= 20)) ==> @1 (and (v' = v) (x' = x) (t' = 0));
    	(and (t >= 0) (t <= 1.3) (v >= 5) (v <= 11)) ==> @5 (and (v' = v) (x' = 0) (t' = t));
		(and (t = 1.3) (v >= 5) (v <= 20)) ==> @3 (and (v' = v) (x' = x) (t' = t));
}

{ mode 5;

  invt:
        (v >= -15); (v <= 15); (x >= -500); (x <= 500);
  flow:
        d/dt[v] = -0.001*x -0.052*v;
        d/dt[x] = v;
        d/dt[t] = 0;

  jump:
    	(and (x >= -500) (x <= 500) (v >= 13) (v <= 15)) ==> @4 (and (v' = v) (x' = x) (t' = 0));
		(and (v <= -1)) ==> @6 (and (v' = v) (x' = x) (t' = t));
}

{ mode 6;

  invt:
        (v <= -1);
  flow:
        d/dt[v] = 0;
        d/dt[x] = 0;
        d/dt[t] = 0;

  jump:
  
}


init:
@startMode (and (x = x0) (t = t0) (v = v0) ); // concrete state
//@5 (and (x >= -500) (x <= 500) (v >= -1.9999) (v <= 15) (t = t0)); // any state

goal:
//@6 (true);
@1	(true);
@2	(true);
@3	(true);
@4	(true);
@5	(true);

